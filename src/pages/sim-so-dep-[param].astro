---
import ListSim from "../components/sim-component/ListSim";
import SeoService from "../service/seo";
import SimService from "../service/sim";
import Layout from "../layouts/Layout.astro";
import HeaderFilter from "src/components/filter-head";
import PaginationCustom from "src/components/helpers/Pagination";
import FindMoreContent from "src/components/seo-content";

const { param } = Astro.params;
const searchParams = Astro.url.search;
const pathname = Astro.url.pathname;

const paramArr = param?.split("-");

const configParam = () => {
  let paramsReq = {};
  if (paramArr?.length && paramArr.length === 4) {
    if (isNaN(Number(paramArr[0])) === false) {
      paramsReq = {
        middle: paramArr[0],
        head: paramArr[3],
      };
      return paramsReq;
    } else if (paramArr[2] === "giua") {
      paramsReq = {
        tail: paramArr[1],
        middle: paramArr[3],
      };
      return paramsReq;
    } else {
      paramsReq = {
        tail: paramArr[1],
        head: paramArr[3],
      };
      return paramsReq;
    }
  } else if (paramArr?.length && paramArr.length === 2) {
    if (paramArr[1] === "giua") {
      paramsReq = {
        middle: paramArr[0],
      };
    } else {
      paramsReq = {
        tail: paramArr[1],
      };
    }
    return paramsReq;
  }
  return paramsReq;
};
const searchClients = new URLSearchParams(searchParams);
const paramsReq = configParam();
let dataSims: any;

let dataContentSeo: any = {};
try {
  dataSims = await SimService.getSim({
    type: "search",
    link: `/sim-so-dep-${param}`,
    searchClient: `&${searchClients}`,
    ...paramsReq,
  });

  const seoConfigRes = await SeoService.getContent({
    link: `${pathname}`,
  });

  if (seoConfigRes.success) dataContentSeo = seoConfigRes.data;
} catch (err) {
  console.log(err);
}

const totalSim = dataSims?.data?.search?.totalSim || 0;
---

<Layout title={dataContentSeo?.title || "Sim ngũ quý"} desc={dataContentSeo?.description}>
  <HeaderFilter client:load dataContentSeo={dataContentSeo} />
  <ListSim
    dataSim={dataSims?.data}
    pathname={pathname}
    searchParams={searchParams}
    type="search"
  />
  <PaginationCustom
    client:only
    searchParams={searchParams}
    totalSim={totalSim}
    pathname={pathname}
  />
  {
    dataContentSeo?.detail && (
      <FindMoreContent dataContentSeo={dataContentSeo} />
    )
  }
</Layout>
